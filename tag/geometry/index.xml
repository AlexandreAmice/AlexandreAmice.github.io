<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Geometry | Alexandre Amice</title><link>https://alexandreamice.github.io/tag/geometry/</link><atom:link href="https://alexandreamice.github.io/tag/geometry/index.xml" rel="self" type="application/rss+xml"/><description>Geometry</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 02 Oct 2023 00:00:00 +0000</lastBuildDate><image><url>https://alexandreamice.github.io/media/icon_hu15baccefadde2163b605cbb3f225a5aa_10270_512x512_fill_lanczos_center_3.png</url><title>Geometry</title><link>https://alexandreamice.github.io/tag/geometry/</link></image><item><title>Certifying Trajectories in Seconds</title><link>https://alexandreamice.github.io/project/c-iris-path/</link><pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/project/c-iris-path/</guid><description>&lt;h1 id="this-page-is-under-construction">THIS PAGE IS UNDER CONSTRUCTION&lt;/h1>
&lt;h1 id="video-summary">Video Summary&lt;/h1>
&lt;video width="320" height="240" controls>
&lt;source src="IcraFinalVideo.mp4" type="video/mp4">
&lt;/video>
&lt;h1 id="motivation">Motivation&lt;/h1>
&lt;p>Collision-free motion planning is a fundamental problem in the safe and efficient operation of any robotic system. One of the most important subroutines in collision-free motion planning is collision detection, which has been studied extensively. Algorithms for checking whether a single configuration is collision free are quite mature and can be performed in microseconds on modern hardware.&lt;/p>
&lt;p>By contrast, algorithms which are capable of certifying non-collision for the infinite family of configurations along a motion plan are less common. Known as dynamic collision checking, this subroutine is performed hundreds to thousands of times in randomized motion planning methods, and so the speed as well as the correctness of these algorithms is central to their adoption. Due to the speed requirement, it is common practice to heuristically perform dynamic collision checking by sampling a finite number of static configurations along the motion plan. Nevertheless, it is widely recognized that this is insufficient for safety critical robots.&lt;/p>
&lt;p>Current methods for formally checking the safety of robots frequently only apply to piecewise linear motion plans and are either too slow for practical deployment, rely on difficult to acquire parameters, or are too conservative for certifying motion plans in tight spaces.&lt;/p>
&lt;!-- put the video of the two iiwas with different levels of safety -->
&lt;h1 id="contribution">Contribution&lt;/h1>
&lt;p>In this work, we provide a method for certifying that a robot trajectory contains no collisions. The method provides rigorous proofs of non-collision using Sums-of-Squares optimization, can certify piecewise-polyonmial paths of arbitrary degree, and is efficient enough to certify the safety of a bimanual manipulator motion plan in just over a second. Moreover, it is efficient enough to discriminate the safety of two motion plans which differ by only millimeters.&lt;/p>
&lt;h1 id="visualizing-the-certificates">Visualizing the Certificates&lt;/h1>
&lt;p>The certificates of non-collision can be visualized as hyperplanes in the task space. Click &amp;ldquo;Open Controls&amp;rdquo; to turn different hyperplanes on and off, replay the animation, and more.&lt;/p>
&lt;iframe
width="100%"
height="500"
src="14dof_hyperplanes.html"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="14dof_hyperplanes"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="14dof_hyperplanes.html" target="14dof_hyperplanes">View and interact with this animation in full screen&lt;/a>&lt;/center>&lt;/p></description></item><item><title>Certified Polyhedral Descriptions of Configuration Space</title><link>https://alexandreamice.github.io/project/c-iris/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/project/c-iris/</guid><description>&lt;h1 id="motivation">Motivation&lt;/h1>
&lt;p>Understanding the geometry of collision-free configuration space (C-free) in the presence of task-space obstacles is an essential ingredient for collision-free motion planning.&lt;/p>
&lt;p>Most work on the geometry of configuration space seeks to describe the configuration-space obstacle from the task-space description. This approach gives a &amp;ldquo;negative&amp;rdquo; description of C-free, describing it as the complement of this configuration space obstacle.&lt;/p>
&lt;p>Nonetheless, many optimization-based motion planning frameworks can benefit greatly from a &amp;ldquo;positive&amp;rdquo; description of C-free, where in C-free is described as the union of simpler, often convex, sets. While it is possible to check for collisions at a point using standard algorithms, to date no practical method exists for computing C-free &lt;em>regions&lt;/em> with rigorous certificates due to the complexity of mapping task-space obstacles through the kinematics. Therefore, the current literature provides no method for providing a positive description of C-free for these motion planning methods.&lt;/p>
&lt;h1 id="contribution">Contribution&lt;/h1>
&lt;p>In this work, we provide a method for describing C-free using convex polyhedra in a bijective, rational parametrization of C-space known as the tangent configuration space (TC-space). Our primary technical contributions are two convex (specifically Sums-of-Squares (SOS)) programs which can certify that a polyhedron in TC-space contains no collision when the obstacles are specified as convex sets in &lt;em>task space&lt;/em>. Similar to &lt;a href="https://groups.csail.mit.edu/robotics-center/public_papers/Deits14.pdf" target="_blank" rel="noopener">(Deits et al. 2014)&lt;/a>, we then construct certified, collision-free polytopic regions by alternating between a pair of convex programs. Our method works in arbitrary dimensions and is the first to our knowledge to provide rigorous certificates for non-zero volume sets in this setting. Moreover, we provide a fast, mature implementation of our technique in the open-source robotics toolbox &lt;a href="https://github.com/RobotLocomotion/drake" target="_blank" rel="noopener">Drake&lt;/a>.&lt;/p>
&lt;h1 id="results">Results&lt;/h1>
&lt;p>We run our method on robots of varying complexity. Visit &lt;a href="https://deepnote.com/workspace/alexandre-amice-c018b305-0386-4703-9474-01b867e6efea/project/C-IRIS-7e82e4f5-f47a-475a-aad3-c88093ed36c6/notebook/2d_example_bilinear_alternation-14f1ee8c795e499ca7f577b6885c10e9" target="_blank" rel="noopener">this link&lt;/a> to play with a variety of these examples yourself!&lt;/p>
&lt;h2 id="a-two-dimensional-example">A Two Dimensional Example&lt;/h2>
&lt;p>We consider a simple two degree of freedom robot where we can visualize both the task space on the left and the configuration space obstacle on the right. The green dot in the configuration space represents the current configuration. The red region corresponds to the configuration space obstacle, i.e. if the green dot wanders into the red region we have a collision. We animate a trajectory through our certified region and show the separating plane certificates for the tips of the two robots. The animation can be replayed by opening the control menu and hitting play on the animation (you may need to minimize the scene tab).&lt;/p>
&lt;iframe
width="100%"
height="500"
src="pinball_trajectory.html"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="pinball_trajectory"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="pinball_trajectory.html" target="pinball_trajectory">View this animation in full screen&lt;/a>&lt;/center>&lt;/p>
&lt;p>We also provide a visualization of our algorithm growing regions in this configuration space below.&lt;/p>
&lt;iframe
src="pinball_growth.html"
width="100%"
height="500"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="pinball_trajectory"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="pinball_growth.html" target="pinball_growth">View this animation in full screen&lt;/a>&lt;/center>&lt;/p>
&lt;h2 id="a-realistic-robot">A Realistic Robot&lt;/h2>
&lt;p>Our work scales to various realistic robots. In this example, a collision-free configuration space region is grown near a pre-grasp pose for a UR3e to grip the red object. The animation shows the range of configurations which are certified as collision-free near the object.&lt;/p>
&lt;iframe
src="ur_single.html"
width="100%"
height="500"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="pinball_trajectory"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="ur_single.html" target="ur_single">View this animation in full screen&lt;/a>&lt;/center>&lt;/p></description></item></channel></rss>