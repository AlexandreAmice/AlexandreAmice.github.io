<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alexandre Amice</title><link>https://alexandreamice.github.io/</link><atom:link href="https://alexandreamice.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Alexandre Amice</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Mon, 24 Oct 2022 00:00:00 +0000</lastBuildDate><image><url>https://alexandreamice.github.io/media/icon_hu15baccefadde2163b605cbb3f225a5aa_10270_512x512_fill_lanczos_center_3.png</url><title>Alexandre Amice</title><link>https://alexandreamice.github.io/</link></image><item><title>Example Talk</title><link>https://alexandreamice.github.io/talk/example-talk/</link><pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/talk/example-talk/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click on the &lt;strong>Slides&lt;/strong> button above to view the built-in slides feature.
&lt;/div>
&lt;/div>
&lt;p>Slides can be added in a few ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create&lt;/strong> slides using Wowchemy&amp;rsquo;s &lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">&lt;em>Slides&lt;/em>&lt;/a> feature and link using &lt;code>slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Upload&lt;/strong> an existing slide deck to &lt;code>static/&lt;/code> and link using &lt;code>url_slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Embed&lt;/strong> your slides (e.g. Google Slides) or presentation video on this page using &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">shortcodes&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Further event details, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">page elements&lt;/a> such as image galleries, can be added to the body of this page.&lt;/p></description></item><item><title>Approximating Robot Configuration Spaces with few Convex Sets using Clique Covers of Visibility Graphs</title><link>https://alexandreamice.github.io/publication/werner-2023-approximating/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/werner-2023-approximating/</guid><description/></item><item><title>Certifying Bimanual RRT Motion Plans in a Second</title><link>https://alexandreamice.github.io/publication/amice-2023-certifying/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/amice-2023-certifying/</guid><description/></item><item><title>Certifying Trajectories in Seconds</title><link>https://alexandreamice.github.io/project/c-iris-path/</link><pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/project/c-iris-path/</guid><description>&lt;h1 id="motivation">Motivation&lt;/h1>
&lt;p>Collision-free motion planning is a fundamental problem in the safe and efficient operation of any robotic system. One of the most important subroutines in collision-free motion planning is collision detection, which has been studied extensively. Algorithms for checking whether a single configuration is collision free are quite mature and can be performed in microseconds on modern hardware.&lt;/p>
&lt;p>By contrast, algorithms which are capable of certifying non-collision for the infinite family of configurations along a motion plan are less common. Known as dynamic collision checking, this subroutine is performed hundreds to thousands of times in randomized motion planning methods, and so the speed as well as the correctness of these algorithms is central to their adoption. Due to the speed requirement, it is common practice to heuristically perform dynamic collision checking by sampling a finite number of static configurations along the motion plan. Nevertheless, it is widely recognized that this is insufficient for safety critical robots.&lt;/p>
&lt;p>Current methods for formally checking the safety of robots frequently only apply to piecewise linear motion plans and are either too slow for practical deployment, rely on difficult to acquire parameters, or are too conservative for certifying motion plans in tight spaces.&lt;/p>
&lt;h1 id="video-summary">Video Summary&lt;/h1>
&lt;video width="320" height="240" controls>
&lt;source src="IcraFinalVideo.mp4" type="video/mp4">
&lt;/video>
&lt;!-- put the video of the two iiwas with different levels of safety -->
&lt;h1 id="contribution">Contribution&lt;/h1>
&lt;p>In this work, we provide a method for certifying that a robot trajectory contains no collisions. The method provides rigorous proofs of non-collision using Sums-of-Squares optimization, can certify piecewise-polyonmial paths of arbitrary degree, and is efficient enough to certify the safety of a bimanual manipulator motion plan in just over a second. Moreover, it is efficient enough to discriminate the safety of two motion plans which differ by only millimeters.&lt;/p>
&lt;h1 id="results">Results&lt;/h1>
&lt;h2 id="complexity-of-certification">Complexity of Certification&lt;/h2>
&lt;p>We consider two realistic robotic scenarios and demonstrate that our method is fast enough to serve as a final safety check of a robot motion plan. Our first system is a bimanual manipula&lt;/p>
&lt;p>The complexity of our method scales in the degree of freedom (DOF) of the robot as well as the degree of the path parametrization. We therefore test our method on piecewise linear motion plans for a high DOF plant, the bimanual manipulator interacting with a shelf and piecewise cubic motion plans for a lower DOF plant.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Bimanual Plant, Piecewise Linear Motion Plan&lt;/th>
&lt;th style="text-align:center">Single arm plant, Piecewise Cubic Motion Plan&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="" srcset="
/project/c-iris-path/combined_hue2592328cda0476ee0c0f2388045a88c_150506_282c5fda9d6c437895fff837472570dd.webp 400w,
/project/c-iris-path/combined_hue2592328cda0476ee0c0f2388045a88c_150506_5e930e41e2f9b85c911030a443a2fbe6.webp 760w,
/project/c-iris-path/combined_hue2592328cda0476ee0c0f2388045a88c_150506_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://alexandreamice.github.io/project/c-iris-path/combined_hue2592328cda0476ee0c0f2388045a88c_150506_282c5fda9d6c437895fff837472570dd.webp"
width="760"
height="677"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/td>
&lt;td style="text-align:center">
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="" srcset="
/project/c-iris-path/iiwa_piecewise_poly_path_small_hu523e7925151d23de0dc2836af6ac8103_224701_e6d6b7990fee98e1a72f90ebb7be553d.webp 400w,
/project/c-iris-path/iiwa_piecewise_poly_path_small_hu523e7925151d23de0dc2836af6ac8103_224701_85185bd515acc63f1f37924fbbfaa461.webp 760w,
/project/c-iris-path/iiwa_piecewise_poly_path_small_hu523e7925151d23de0dc2836af6ac8103_224701_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://alexandreamice.github.io/project/c-iris-path/iiwa_piecewise_poly_path_small_hu523e7925151d23de0dc2836af6ac8103_224701_e6d6b7990fee98e1a72f90ebb7be553d.webp"
width="760"
height="728"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Total solver time to certify motion plan: 1.211 sec&lt;/td>
&lt;td style="text-align:center">Total solver time to certify motion plan: 8.99 sec&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="visualizing-the-certificates">Visualizing the Certificates&lt;/h2>
&lt;p>The certificates of non-collision can be visualized as hyperplanes in the task space. Click &amp;ldquo;Open Controls&amp;rdquo; to turn different hyperplanes on and off, replay the animation, and more.&lt;/p>
&lt;iframe
width="100%"
height="500"
src="14dof_hyperplanes.html"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="14dof_hyperplanes"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="14dof_hyperplanes.html" target="14dof_hyperplanes">View and interact with this animation in full screen&lt;/a>&lt;/center>&lt;/p></description></item><item><title>Approximate Optimal Controller Synthesis for Cart-Poles and Quadrotors via Sums-of-Squares</title><link>https://alexandreamice.github.io/publication/yang-2023-approximate/</link><pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/yang-2023-approximate/</guid><description/></item><item><title>Certified Polyhedral Descriptions of Configuration Space</title><link>https://alexandreamice.github.io/project/c-iris/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/project/c-iris/</guid><description>&lt;h1 id="motivation">Motivation&lt;/h1>
&lt;p>Understanding the geometry of collision-free configuration space (C-free) in the presence of task-space obstacles is an essential ingredient for collision-free motion planning.&lt;/p>
&lt;p>Most work on the geometry of configuration space seeks to describe the configuration-space obstacle from the task-space description. This approach gives a &amp;ldquo;negative&amp;rdquo; description of C-free, describing it as the complement of this configuration space obstacle.&lt;/p>
&lt;p>Nonetheless, many optimization-based motion planning frameworks can benefit greatly from a &amp;ldquo;positive&amp;rdquo; description of C-free, where in C-free is described as the union of simpler, often convex, sets. While it is possible to check for collisions at a point using standard algorithms, to date no practical method exists for computing C-free &lt;em>regions&lt;/em> with rigorous certificates due to the complexity of mapping task-space obstacles through the kinematics. Therefore, the current literature provides no method for providing a positive description of C-free for these motion planning methods.&lt;/p>
&lt;h1 id="contribution">Contribution&lt;/h1>
&lt;p>In this work, we provide a method for describing C-free using convex polyhedra in a bijective, rational parametrization of C-space known as the tangent configuration space (TC-space). Our primary technical contributions are two convex (specifically Sums-of-Squares (SOS)) programs which can certify that a polyhedron in TC-space contains no collision when the obstacles are specified as convex sets in &lt;em>task space&lt;/em>. Similar to &lt;a href="https://groups.csail.mit.edu/robotics-center/public_papers/Deits14.pdf" target="_blank" rel="noopener">(Deits et al. 2014)&lt;/a>, we then construct certified, collision-free polytopic regions by alternating between a pair of convex programs. Our method works in arbitrary dimensions and is the first to our knowledge to provide rigorous certificates for non-zero volume sets in this setting. Moreover, we provide a fast, mature implementation of our technique in the open-source robotics toolbox &lt;a href="https://github.com/RobotLocomotion/drake" target="_blank" rel="noopener">Drake&lt;/a>.&lt;/p>
&lt;h1 id="results">Results&lt;/h1>
&lt;p>We run our method on robots of varying complexity. Visit &lt;a href="https://deepnote.com/workspace/alexandre-amice-c018b305-0386-4703-9474-01b867e6efea/project/C-IRIS-7e82e4f5-f47a-475a-aad3-c88093ed36c6/notebook/2d_example_bilinear_alternation-14f1ee8c795e499ca7f577b6885c10e9" target="_blank" rel="noopener">this link&lt;/a> to play with a variety of these examples yourself!&lt;/p>
&lt;h2 id="a-two-dimensional-example">A Two Dimensional Example&lt;/h2>
&lt;p>We consider a simple two degree of freedom robot where we can visualize both the task space on the left and the configuration space obstacle on the right. The green dot in the configuration space represents the current configuration. The red region corresponds to the configuration space obstacle, i.e. if the green dot wanders into the red region we have a collision. We animate a trajectory through our certified region and show the separating plane certificates for the tips of the two robots. The animation can be replayed by opening the control menu and hitting play on the animation (you may need to minimize the scene tab).&lt;/p>
&lt;iframe
width="100%"
height="500"
src="pinball_trajectory.html"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="pinball_trajectory"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="pinball_trajectory.html" target="pinball_trajectory">View this animation in full screen&lt;/a>&lt;/center>&lt;/p>
&lt;p>We also provide a visualization of our algorithm growing regions in this configuration space below.&lt;/p>
&lt;iframe
src="pinball_growth.html"
width="100%"
height="500"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="pinball_trajectory"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="pinball_growth.html" target="pinball_growth">View this animation in full screen&lt;/a>&lt;/center>&lt;/p>
&lt;h2 id="a-realistic-robot">A Realistic Robot&lt;/h2>
&lt;p>Our work scales to various realistic robots. In this example, a collision-free configuration space region is grown near a pre-grasp pose for a UR3e to grip the red object. The animation shows the range of configurations which are certified as collision-free near the object.&lt;/p>
&lt;iframe
src="ur_single.html"
width="100%"
height="500"
frameborder="1"
allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>
name="pinball_trajectory"
&lt;/iframe>
&lt;p>&lt;center>&lt;a href="ur_single.html" target="ur_single">View this animation in full screen&lt;/a>&lt;/center>&lt;/p></description></item><item><title>Certified Polyhedral Decompositions of Collision-Free Configuration Space</title><link>https://alexandreamice.github.io/publication/dai-2023-certified/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/dai-2023-certified/</guid><description/></item><item><title>Structured Optimization</title><link>https://alexandreamice.github.io/project/poset_least_squares/</link><pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/project/poset_least_squares/</guid><description>&lt;p>WORK IN PROGRESS&lt;/p></description></item><item><title>Discrete Approximate Information States in Partially Observable Environments</title><link>https://alexandreamice.github.io/publication/yang-2022-discrete/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/yang-2022-discrete/</guid><description/></item><item><title>Finding and Optimizing Certified, Collision-Free Regions in Configuration Space for Robot Manipulators</title><link>https://alexandreamice.github.io/publication/amice-2022-finding/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/amice-2022-finding/</guid><description/></item><item><title>Solving Least Squares Problems on Partially Ordered Sets</title><link>https://alexandreamice.github.io/publication/amice-2022-poset/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/amice-2022-poset/</guid><description/></item><item><title>6.S098, IAP 2022 -- Applied Convex Optimization</title><link>https://alexandreamice.github.io/teaching/convex_optimization/</link><pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/teaching/convex_optimization/</guid><description>&lt;!-- ---
layout: archive
title: "6.S098, IAP 2022 -- Applied Convex Optimization"
permalink: /courses/6.S098/
author_profile: true
--- -->
&lt;p>&lt;strong>Instructors:&lt;/strong> &lt;a href="mailto:amice@mit.edu">Alexandre Amice&lt;/a>, &lt;a href="mailto:blegat@mit.edu">Benoit Legat&lt;/a>&lt;/p>
&lt;p>&lt;strong>Lectures:&lt;/strong> Tuesday/Thursday 1:00-2:30pm January 4th - January 27th&lt;/p>
&lt;p>&lt;strong>Syllabus&lt;/strong>: &lt;a href="6.S098_Syllabus.pdf">Syllabus&lt;/a>&lt;/p>
&lt;p>&lt;strong>Piazza&lt;/strong>: &lt;a href="http://piazza.com/mit/other/6s098" target="_blank" rel="noopener">Piazza&lt;/a>&lt;/p>
&lt;p>&lt;strong>Lecture Recordings&lt;/strong>: &lt;a href="https://www.youtube.com/playlist?list=PL5SG6ajT9NZKxdvM1jQOLXmeKO7MfyLxR" target="_blank" rel="noopener">Lecture Recordings&lt;/a>&lt;/p>
&lt;h2 id="course-description">Course description&lt;/h2>
&lt;p>Optimization is a cornerstone of many disciplines in engineering. Surprisingly, many problems such
as balancing bipedal robots, designing your own index fund, and allocating power in the energy
grid can be formulated as convex optimization problems. Convex optimization is a mature technology which can be used to solve a huge number of applied problems and can be scaled to problems
with millions of variables. However, recognizing what can be transformed into a convex optimization problem can be challenging. This course will teach you how to recognize, formulate, and solve
these problems.&lt;/p>
&lt;p>Lectures will be motivated by realistic case studies from areas where convex optimization is used in
practice. We will briefly survey theoretical results in convex analysis, but the majority of the course
will focus on formulating and solving problems that come up in practice. Applications will include
robotics, signal processing, statistics and machine learning, finance, control, power systems, and
other areas based on student interest. This course is designed for advanced undergraduates and
beginning graduate students.&lt;/p>
&lt;h2 id="course-objectives">Course objectives&lt;/h2>
&lt;ul>
&lt;li>learn to recognize and formulate convex optimization problems that appear in various fields.&lt;/li>
&lt;li>become comfortable using open source software to solve these optimization problems.&lt;/li>
&lt;li>develop insight to decide which solver is best for your problem.&lt;/li>
&lt;li>give students the background needed to feel comfortable in applying these methods in their own research work and/or applications&lt;/li>
&lt;/ul>
&lt;h2 id="about-the-course">About the Course&lt;/h2>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>Comfort with multivariable calculus (18.02) and linear algebra (18.06) as well as basic programming in Python or Julia. Familiarity with basic probability and/or controls will aid in understanding many of the case studies.&lt;/p>
&lt;h3 id="intended-audience">Intended audience&lt;/h3>
&lt;p>Anyone who expects to use optimization as a tool for scientific computing. Beginning graduate and advanced undergraduate students are the particular target audience.&lt;/p>
&lt;h3 id="schedule">Schedule&lt;/h3>
&lt;p>The following schedule is tentative and subject to change. See Syllabus for in depth topic list. Homework problems will be drawn primarily from &lt;a href="6.S098_homeworks/boyd_extra_exercises.pdf">Boyd&amp;rsquo;s Extra Exercises&lt;/a>.&lt;/p>
&lt;p>| Date | Topic | Homework |
Week 1 01/04, 01/06 | Linear Programming, Fundamentals of Convex Programming | &lt;a href="6.S098_homeworks/hwmk1.pdf">Homework 1&lt;/a> |
Week 2 01/11, 01/13 | Quadratic and Second Order Cone Programming, Duality | &lt;a href="6.S098_homeworks/hwmk2.pdf">Homework 2&lt;/a> |
Week 3 01/18, 01/20 | Case Study: Machine Learning and Statistics&lt;br /> Case Study: Power Systems and Bender&amp;rsquo;s Decomposition| &lt;a href="6.S098_homeworks/hwmk3.pdf">Homework 3&lt;/a> |
Week 4 01/25, 01/27| Hard Optimization Problems: TBD | &lt;a href="6.S098_homeworks/final_project_description.pdf">Project&lt;/a> |&lt;/p>
&lt;h3 id="problem-sets">Problem Sets&lt;/h3>
&lt;p>There will be three problem sets, assigned on Wednesday and due the subsequent Wednesday. Grading will be very coarse&amp;ndash;emphasis is put on understanding the concepts over correct answers. Problem sets will focus on giving students practice formulating convex optimization problems and obtaining familiarity with solving those programs using open source software.&lt;/p>
&lt;p>Each problem set will ask you to model and solve convex optimization problems that come from various application areas, which will be chosen based on interests of the class. Problem sets will require use of the Julia or Python programming languages, but no prior experience in either is required. Problem sets are expected to take around 4 hours each.&lt;/p>
&lt;h3 id="project">Project&lt;/h3>
&lt;p>There will be a course project during the last week of IAP that will allow you to apply convex optimization to a problem of interest. The final product will be a short mathematical description of this problem (akin to the descriptions you see on the problem sets) and a solution. Course grading is designed such that this project can take the place of the final problem set. Presentation of the results to the class are a possibility.&lt;/p>
&lt;h3 id="textbook">Textbook&lt;/h3>
&lt;p>The textbook is Convex Optimization by Boyd and Vandenberghe, available &lt;a href="https://web.stanford.edu/~boyd/cvxbook/" target="_blank" rel="noopener">online&lt;/a>.&lt;/p>
&lt;h3 id="software">Software&lt;/h3>
&lt;p>You will use CVX in one of &lt;a href="https://www.cvxpy.org/CVXPY" target="_blank" rel="noopener">Python&lt;/a> or &lt;a href="http://convexjl.readthedocs.org/Convex.jl" target="_blank" rel="noopener">Julia&lt;/a>&lt;/p>
&lt;h3 id="grading">Grading&lt;/h3>
&lt;ul>
&lt;li>This course is offered for 6 units of credit, and the grading is P/D/F. To receive credit, you must get 16 or more points. A minimum of 4 points of attendance and 2 points on the final project are
required to pass. The main goal of this course is to learn about optimization and solve some fun problems.&lt;/li>
&lt;/ul>
&lt;p>Problem Sets | 12 | 4 points per problem set |
Attendance | 6 | 1 point per lecture in person, 0.75 for remote attendance |
Project | 4 |
Total | 22&lt;/p></description></item><item><title>Approximately supermodular scheduling subject to matroid constraints</title><link>https://alexandreamice.github.io/publication/chamon-2021-approximately/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/chamon-2021-approximately/</guid><description/></item><item><title>Resilient Behavior Through Optimization</title><link>https://alexandreamice.github.io/project/constraint_relax/</link><pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/project/constraint_relax/</guid><description>&lt;p>This project is a complete but this page is a work in progress&lt;/p></description></item><item><title>Resilient control: Compromising to adapt</title><link>https://alexandreamice.github.io/publication/chamon-2020-resilient/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/chamon-2020-resilient/</guid><description/></item><item><title>Scheduling with Constraints</title><link>https://alexandreamice.github.io/project/matroid/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/project/matroid/</guid><description>&lt;p>This project is completed but this page is a work in progress.&lt;/p></description></item><item><title>Slides</title><link>https://alexandreamice.github.io/slides/example/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/slides/example/</guid><description>&lt;h1 id="create-slides-in-markdown-with-hugo-blox-builder">Create slides in Markdown with Hugo Blox Builder&lt;/h1>
&lt;p>&lt;a href="https://hugoblox.com/" target="_blank" rel="noopener">Hugo Blox Builder&lt;/a> | &lt;a href="https://docs.hugoblox.com/content/slides/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Efficiently write slides in Markdown&lt;/li>
&lt;li>3-in-1: Create, Present, and Publish your slides&lt;/li>
&lt;li>Supports speaker notes&lt;/li>
&lt;li>Mobile friendly slides&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="controls">Controls&lt;/h2>
&lt;ul>
&lt;li>Next: &lt;code>Right Arrow&lt;/code> or &lt;code>Space&lt;/code>&lt;/li>
&lt;li>Previous: &lt;code>Left Arrow&lt;/code>&lt;/li>
&lt;li>Start: &lt;code>Home&lt;/code>&lt;/li>
&lt;li>Finish: &lt;code>End&lt;/code>&lt;/li>
&lt;li>Overview: &lt;code>Esc&lt;/code>&lt;/li>
&lt;li>Speaker notes: &lt;code>S&lt;/code>&lt;/li>
&lt;li>Fullscreen: &lt;code>F&lt;/code>&lt;/li>
&lt;li>Zoom: &lt;code>Alt + Click&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://revealjs.com/pdf-export/" target="_blank" rel="noopener">PDF Export&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="code-highlighting">Code Highlighting&lt;/h2>
&lt;p>Inline code: &lt;code>variable&lt;/code>&lt;/p>
&lt;p>Code block:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">porridge&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;blueberry&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">porridge&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;blueberry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Eating...&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="math">Math&lt;/h2>
&lt;p>In-line math: $x + y = z$&lt;/p>
&lt;p>Block math:&lt;/p>
&lt;p>$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p>
&lt;hr>
&lt;h2 id="fragments">Fragments&lt;/h2>
&lt;p>Make content appear incrementally&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{{% fragment %}} One {{% /fragment %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% fragment %}} **Two** {{% /fragment %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% fragment %}} Three {{% /fragment %}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Press &lt;code>Space&lt;/code> to play!&lt;/p>
&lt;span class="fragment " >
One
&lt;/span>
&lt;span class="fragment " >
&lt;strong>Two&lt;/strong>
&lt;/span>
&lt;span class="fragment " >
Three
&lt;/span>
&lt;hr>
&lt;p>A fragment can accept two optional parameters:&lt;/p>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>: use a custom style (requires definition in custom CSS)&lt;/li>
&lt;li>&lt;code>weight&lt;/code>: sets the order in which a fragment appears&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="speaker-notes">Speaker Notes&lt;/h2>
&lt;p>Add speaker notes to your presentation&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">{{% speaker_note %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Only the speaker can read these notes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Press &lt;span class="sb">`S`&lt;/span> key to view
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{% /speaker_note %}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Press the &lt;code>S&lt;/code> key to view the speaker notes!&lt;/p>
&lt;aside class="notes">
&lt;ul>
&lt;li>Only the speaker can read these notes&lt;/li>
&lt;li>Press &lt;code>S&lt;/code> key to view&lt;/li>
&lt;/ul>
&lt;/aside>
&lt;hr>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;ul>
&lt;li>black: Black background, white text, blue links (default)&lt;/li>
&lt;li>white: White background, black text, blue links&lt;/li>
&lt;li>league: Gray background, white text, blue links&lt;/li>
&lt;li>beige: Beige background, dark text, brown links&lt;/li>
&lt;li>sky: Blue background, thin dark text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>night: Black background, thick white text, orange links&lt;/li>
&lt;li>serif: Cappuccino background, gray text, brown links&lt;/li>
&lt;li>simple: White background, black text, blue links&lt;/li>
&lt;li>solarized: Cream-colored background, dark green text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-noprocess data-shortcode-slide
data-background-image="/media/boards.jpg"
>
&lt;h2 id="custom-slide">Custom Slide&lt;/h2>
&lt;p>Customize the slide style and background&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">background-image&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/media/boards.jpg&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">background-color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#0000FF&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;my-style&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="custom-css-example">Custom CSS Example&lt;/h2>
&lt;p>Let&amp;rsquo;s make headers navy colored.&lt;/p>
&lt;p>Create &lt;code>assets/css/reveal_custom.css&lt;/code> with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h1&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h2&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h3&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">navy&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h1 id="questions">Questions?&lt;/h1>
&lt;p>&lt;a href="https://discord.gg/z8wNYzb" target="_blank" rel="noopener">Ask&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.hugoblox.com/content/slides/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p></description></item><item><title>Matroid-constrained approximately supermodular optimization for near-optimal actuator scheduling</title><link>https://alexandreamice.github.io/publication/chamon-2019-matroid/</link><pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate><guid>https://alexandreamice.github.io/publication/chamon-2019-matroid/</guid><description/></item></channel></rss>